# -*- coding: utf-8 -*-
import MySQLdb
import json
from record_log import record_log
from Redis_DB import redis_db
class mysql_db(object):
    mysql_connect = MySQLdb.connect(host='127.0.0.1', port=3306, user='root', passwd='root', db='spider',
                                         charset='utf8')
    def __init__(self,mysql_data,page):
        self.mysql_cur=self.mysql_connect.cursor()
        self.mysql_data=mysql_data
        self.recordLog=record_log()
        self.page=page
    def mysql_insert(self):
        if len(self.mysql_data) != 0:
            for l in self.mysql_data:
                sql = "insert into cm1008611 (unit,title,content,time)values('" + l["unit"].encode("utf8") + "','" + l["title"].encode("utf8") + "','" + l["content"] + "','" + l["time"].encode("utf8") + "')"
                try:
                    self.mysql_cur.execute(sql)
                except:
                    print "mysql insert fail"
                    redisObject=redis_db(redis_data=l["element"])
                    redisObject.redis_delete()
                    self.recordLog.record_error_log(status=3.1, des="mysql_insert fail:", page=self.page, content_url=l["element"])
                    continue
            try:
                result=self.mysql_connect.commit()
                return result
            except:
                self.recordLog.record_error_log(status=3,des="mysql_db connect.commit fail",page=self.page,content_url="")
                return False
            finally:
                self.mysql_cur.close()
if __name__=="__main__":
    data=[{'content': '\xb6\xe8\xb5\x84\xe6\xba\x90\xe6\xb1\xa0\xe5\x9b\x9b\xe6\x9c\x9f\xe5\x9b\x9b\xe6\x9c\x9f\xe8\xa1\xa5\xe5\x85\x85\xe8\xae\xbe\xe5\xa4\x87\xe9\xa1\xb9\xe7\x9b\xae_\xe4\xb8\xad\xe9\x80\x89\xe5\x80\x99\xe9\x80\x89\xe4\xba\xba\xe5\x85\xac\xe7\xa4\xba|||||||||\xe7\x89\xa9\xe8\x81\x94\xe7\xbd\x91\xe5\x85\xac\xe5\x8f\xb8\xe5\xbc\x80\xe6\x94\xbe\xe5\xb9\xb3\xe5\x8f\xb0\xe7\xa1\xac\xe4\xbb\xb6\xe8\xb5\x84\xe6\xba\x90\xe6\xb1\xa0\xe5\x9b\x9b\xe6\x9c\x9f\xe5\x9b\x9b\xe6\x9c\x9f\xe8\xa1\xa5\xe5\x85\x85\xe8\xae\xbe\xe5\xa4\x87\xe9\xa1\xb9\xe7\x9b\xae\xe4\xba\x8e2016\xe5\xb9\xb412\xe6\x9c\x8806\xe6\x97\xa509\xe6\x97\xb600\xe5\x88\x86\xe5\xbc\x80\xe6\xa0\x87\xef\xbc\x8c\xe5\xb7\xb2\xe6\x8c\x89\xe6\xaf\x94\xe9\x80\x89\xe6\x96\x87\xe4\xbb\xb6\xe8\xa7\x84\xe5\xae\x9a\xe7\x9a\x84\xe8\xaf\x84\xe9\x80\x89\xe6\x96\xb9\xe6\xb3\x95\xe5\x8f\x8a\xe7\x9b\xb8\xe5\x85\xb3\xe8\xa7\x84\xe5\xae\x9a\xe7\x9a\x84\xe8\xa6\x81\xe6\xb1\x82\xe5\xae\x8c\xe6\x88\x90\xe8\xaf\x84\xe5\xae\xa1\xe5\xb7\xa5\xe4\xbd\x9c\xef\xbc\x8c\xe7\x8e\xb0\xe5\xb0\x86\xe4\xb8\xad\xe9\x80\x89\xe5\x80\x99\xe9\x80\x89\xe4\xba\xba\xe5\x85\xac\xe7\xa4\xba\xe5\xa6\x82\xe4\xb8\x8b||\xe9\x87\x8d\xe5\xba\x86\xe9\x85\xb7\xe5\xb0\x94\xe7\xa7\x91\xe6\x8a\x80\xe6\x9c\x89\xe9\x99\x90\xe5\x85\xac\xe5\x8f\xb8\xe4\xb8\xad\xe9\x80\x89\xe6\x9c\xac\xe9\xa1\xb9\xe7\x9b\xae||\xe4\xb8\xad\xe9\x80\x89\xe5\x80\x99\xe9\x80\x89\xe4\xba\xba\xe5\x85\xac\xe7\xa4\xba\xe6\x9c\x9f\xe4\xb8\xba\xe5\x85\xac\xe7\xa4\xba\xe4\xb9\x8b\xe6\x97\xa5\xe8\xb5\xb7\xe8\xbf\x9e\xe7\xbb\xad3\xe6\x97\xa5\xef\xbc\x8c\xe5\x85\xac\xe7\xa4\xba\xe6\x88\xaa\xe6\xad\xa2\xe6\x97\xb6\xe9\x97\xb4\xe4\xb8\xba2017\xe5\xb9\xb42\xe6\x9c\x8824\xe6\x97\xa5\xe3\x80\x82\xe5\x85\xac\xe7\xa4\xba\xe6\x9c\x9f\xe5\x86\x85\xef\xbc\x8c\xe5\xa6\x82\xe5\xaf\xb9\xe4\xb8\xad\xe9\x80\x89\xe5\x80\x99\xe9\x80\x89\xe4\xba\xba\xe5\xad\x98\xe5\x9c\xa8\xe7\x96\x91\xe9\x97\xae\xef\xbc\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xb9\xa6\xe9\x9d\xa2\xe5\xbd\xa2\xe5\xbc\x8f\xe5\xae\x9e\xe5\x90\x8d\xe5\x90\x91\xe9\x87\x87\xe8\xb4\xad\xe4\xba\xba\xe6\x88\x96\xe4\xbb\xa3\xe7\x90\x86\xe6\x9c\xba\xe6\x9e\x84\xe6\x8f\x90\xe5\x87\xba\xe3\x80\x82||\xe7\x89\xb9\xe6\xad\xa4\xe5\x85\xac\xe7\xa4\xba\xe3\x80\x82||\xe8\x81\x94\xe7\xb3\xbb\xe4\xba\xba\xe5\xae\x89\xe8\x80\x81\xe5\xb8\x88||\xe8\x81\x94\xe7\xb3\xbb\xe7\x94\xb5\xe8\xaf\x9d18702386087||\xe9\x82\xae\xe7\xae\xb1anhuimin@iot.chinamobile.com||\xe9\x87\x87\xe8\xb4\xad\xe4\xba\xba/\xe6\x8b\x9b\xe6\xa0\x87\xe4\xbb\xa3\xe7\x90\x86\xe6\x9c\xba\xe6\x9e\x84\xe4\xb8\xad\xe7\xa7\xbb\xe7\x89\xa9\xe8\x81\x94\xe7\xbd\x91\xe6\x9c\x89\xe9\x99\x90\xe5\x85\xac\xe5\x8f\xb8||2017\xe5\xb9\xb42\xe6\x9c\x8820\xe6\x97\xa5|||||||\xe7\x82\xb9\xe5\x87\xbb\xe4\xb8\x8b\xe8\xbd\xbd\xe9\x99\x84\xe4\xbb\xb6|||', 'element': '332124', 'time': '2017-2-21', 'unit': u'\u7269\u8054\u7f51\u516c\u53f8', 'title': u'\u5f00\u653e\u5e73\u53f0\u786c\u4ef6\u8d44\u6e90\u6c60\u56db\u671f\u56db\u671f\u8865\u5145\u8bbe\u5907\u9879\u76ee_\u4e2d\u9009\u5019\u9009\u4eba\u516c\u793a'}]
    mysql_object=mysql_db(data,1)
    mysql_object.mysql_insert()